name: publish

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest # for Arm based macs (M1 and above).
            args: --target aarch64-apple-darwin
            artifact_platform: macos-arm64
          - platform: macos-latest # for Intel based macs.
            args: --target x86_64-apple-darwin
            artifact_platform: macos-x86_64
          - platform: ubuntu-22.04
            args: ''
            artifact_platform: linux-x86_64
          - platform: ubuntu-22.04-arm
            args: ''
            artifact_platform: linux-arm64
          - platform: windows-latest
            args: ''
            artifact_platform: windows-x86_64

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: pnpm/action-setup@v4
        name: Setup pnpm
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm # Set this to npm, yarn or pnpm.

      - name: Install Dependencies
        run: pnpm i --frozen-lockfile

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        id: tauri_build
        with:
          args: ${{ matrix.args }}

      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: tauri-artifact-${{ matrix.artifact_platform }}
